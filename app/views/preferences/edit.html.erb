<div>
  <!-- Breadcrumb navigation -->
  <nav class="flex border-b border-gray-200 bg-white mb-6" aria-label="Breadcrumb">
    <ol role="list" class="flex w-full max-w-screen-xl space-x-4 px-4 sm:px-6 lg:px-8 py-3">
      <li class="flex">
        <div class="flex items-center">
          <a href="/" class="text-gray-400 hover:text-gray-500">
            <svg class="size-5 shrink-0" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
              <path fill-rule="evenodd" d="M9.293 2.293a1 1 0 0 1 1.414 0l7 7A1 1 0 0 1 17 11h-1v6a1 1 0 0 1-1 1h-2a1 1 0 0 1-1-1v-3a1 1 0 0 0-1-1H9a1 1 0 0 0-1 1v3a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-6H3a1 1 0 0 1-.707-1.707l7-7Z" clip-rule="evenodd" />
            </svg>
            <span class="sr-only">Home</span>
          </a>
        </div>
      </li>
      <li class="flex">
        <div class="flex items-center">
          <svg class="h-full w-6 shrink-0 text-gray-200" viewBox="0 0 24 44" preserveAspectRatio="none" fill="currentColor" aria-hidden="true">
            <path d="M.293 0l22 22-22 22h1.414l22-22-22-22H.293z" />
          </svg>
          <a href="/preferences" class="ml-4 text-sm font-medium text-gray-500 hover:text-gray-700">Preferences</a>
        </div>
      </li>
      <li class="flex">
        <div class="flex items-center">
          <svg class="h-full w-6 shrink-0 text-gray-200" viewBox="0 0 24 44" preserveAspectRatio="none" fill="currentColor" aria-hidden="true">
            <path d="M.293 0l22 22-22 22h1.414l22-22-22-22H.293z" />
          </svg>
          <a href="/preferences/<%= @category.name %>" class="ml-4 text-sm font-medium text-gray-500 hover:text-gray-700"><%= @category.name %></a>
        </div>
      </li>
      <li class="flex">
        <div class="flex items-center">
          <svg class="h-full w-6 shrink-0 text-gray-200" viewBox="0 0 24 44" preserveAspectRatio="none" fill="currentColor" aria-hidden="true">
            <path d="M.293 0l22 22-22 22h1.414l22-22-22-22H.293z" />
          </svg>
          <a href="#" class="ml-4 text-sm font-medium text-indigo-600 hover:text-indigo-800" aria-current="page">Edit</a>
        </div>
      </li>
    </ol>
  </nav>

  <div class="md:flex md:items-center md:justify-between mb-8">
    <div class="flex-1 min-w-0">
      <h1 class="text-2xl font-bold text-gray-900 sm:text-3xl">Edit <%= @category.name %> Preferences</h1>
      <p class="mt-2 text-sm text-gray-600 md:text-base"><%= @category.description %></p>
    </div>
    <div class="mt-4 flex md:ml-4 md:mt-0">
      <%= link_to preference_path(@category.name), class: "inline-flex items-center rounded-md bg-white px-3 py-2 text-sm font-semibold text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-50" do %>
        <svg class="mr-1.5 -ml-0.5 size-5 text-gray-400" viewBox="0 0 20 20" fill="currentColor">
          <path fill-rule="evenodd" d="M9.707 14.707a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 1.414L7.414 9H15a1 1 0 110 2H7.414l2.293 2.293a1 1 0 010 1.414z" clip-rule="evenodd" />
        </svg>
        Back to View
      <% end %>
    </div>
  </div>

  <div class="divide-y divide-gray-900/10">
    <!-- Add/Edit Question Button and Modal -->
    <div class="flex justify-end mb-4">
      <button type="button" id="show-add-question-modal" class="inline-flex items-center rounded-md bg-indigo-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600">
        <svg class="mr-1.5 -ml-0.5 size-5" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
          <path d="M10.75 4.75a.75.75 0 00-1.5 0v4.5h-4.5a.75.75 0 000 1.5h4.5v4.5a.75.75 0 001.5 0v-4.5h4.5a.75.75 0 000-1.5h-4.5v-4.5z" />
        </svg>
        Add Question
      </button>
    </div>
    <div id="add-question-modal" class="fixed inset-0 z-50 hidden overflow-y-auto bg-gray-900 bg-opacity-75 flex items-center justify-center px-4 sm:px-0">
      <div class="bg-white rounded-lg shadow-lg w-full max-w-lg mx-auto p-4 sm:p-6 relative max-h-[90vh] overflow-y-auto">
        <h2 class="text-lg font-semibold mb-4 text-gray-900">Add Question to <%= @category.name %></h2>
        <%= form_with url: add_question_preference_path(@category.name), method: :post, local: true, data: { turbo: false }, html: { id: "add-question-form" } do |f| %>
          <div class="mb-4">
            <%= f.label :label, "Question Label", class: "block text-sm font-medium text-gray-700" %>
            <%= f.text_field :label, required: true, class: "mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm", 
                            aria_describedby: "label-error" %>
            <p class="mt-1 hidden text-sm text-red-600" id="label-error"></p>
          </div>
          <div class="mb-4">
            <%= f.label :key, "Key", class: "block text-sm font-medium text-gray-700" %>
            <%= f.text_field :key, required: true, class: "mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm", 
                            aria_describedby: "key-error" %>
            <p class="mt-1 hidden text-sm text-red-600" id="key-error"></p>
          </div>
          <div class="mb-4">
            <%= f.label :question_type, "Type", class: "block text-sm font-medium text-gray-700" %>
            <%= f.select :question_type, PreferenceQuestion::QUESTION_TYPES.map { |t| [t.titleize, t] }, {}, required: true, class: "mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm",
                        aria_describedby: "type-error" %>
            <p class="mt-1 hidden text-sm text-red-600" id="type-error"></p>
          </div>
          <div class="mb-4">
            <%= f.label :description, "Description", class: "block text-sm font-medium text-gray-700" %>
            <%= f.text_area :description, rows: 2, class: "mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm" %>
          </div>
          <div class="mb-4">
            <%= f.label :default_value, "Default Value", class: "block text-sm font-medium text-gray-700" %>
            <%= f.text_field :default_value, class: "mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm" %>
          </div>
          <div class="mb-4">
            <div class="flex items-center">
              <%= f.check_box :required, class: "h-4 w-4 rounded border-gray-300 text-indigo-600 focus:ring-indigo-500" %>
              <%= f.label :required, "Required?", class: "ml-2 text-sm font-medium text-gray-700" %>
            </div>
          </div>
          <div class="mb-4">
            <%= f.label :options, "Options (comma separated, for select/radio/checkbox)", class: "block text-sm font-medium text-gray-700" %>
            <%= f.text_field :options, class: "mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm",
                           aria_describedby: "options-error" %>
            <p class="mt-1 hidden text-sm text-red-600" id="options-error"></p>
          </div>
          <div class="flex flex-col-reverse sm:flex-row sm:justify-end gap-2">
            <button type="button" id="cancel-add-question" class="mt-2 sm:mt-0 w-full sm:w-auto px-4 py-2 rounded-md bg-gray-200 text-gray-700 hover:bg-gray-300">Cancel</button>
            <%= f.submit "Add Question", class: "w-full sm:w-auto px-4 py-2 rounded-md bg-indigo-600 text-white font-semibold hover:bg-indigo-700" %>
          </div>
        <% end %>
        <button id="close-add-question-modal" class="absolute top-2 right-2 text-gray-400 hover:text-gray-600">
          <span class="sr-only">Close</span>
          &times;
        </button>
      </div>
    </div>
    <script>
      document.addEventListener("DOMContentLoaded", function() {
        var showBtn = document.getElementById("show-add-question-modal");
        var modal = document.getElementById("add-question-modal");
        var closeBtn = document.getElementById("close-add-question-modal");
        var cancelBtn = document.getElementById("cancel-add-question");
        var form = document.getElementById("add-question-form");
        
        // Show modal
        if (showBtn && modal) {
          showBtn.addEventListener("click", function() {
            modal.classList.remove("hidden");
            document.body.classList.add("overflow-hidden"); // Prevent scrolling when modal is open
          });
        }
        
        // Close modal handlers
        function closeModal() {
          modal.classList.add("hidden");
          document.body.classList.remove("overflow-hidden");
          if (form) form.reset(); // Reset form on close
          
          // Clear any validation errors
          document.querySelectorAll(".text-red-600").forEach(el => {
            el.classList.add("hidden");
            el.textContent = "";
          });
          document.querySelectorAll(".border-red-500").forEach(el => {
            el.classList.remove("border-red-500");
            el.classList.add("border-gray-300");
          });
        }
        
        if (closeBtn && modal) {
          closeBtn.addEventListener("click", closeModal);
        }
        if (cancelBtn && modal) {
          cancelBtn.addEventListener("click", closeModal);
        }
        
        // Close on escape key
        document.addEventListener("keydown", function(e) {
          if (e.key === "Escape" && !modal.classList.contains("hidden")) {
            closeModal();
          }
        });
        
        // Close on background click
        modal.addEventListener("click", function(e) {
          if (e.target === modal) {
            closeModal();
          }
        });
        
        // Form validation
        if (form) {
          form.addEventListener("submit", function(e) {
            let valid = true;
            
            // Validate label
            const labelInput = form.querySelector("input[name='label']");
            const labelError = document.getElementById("label-error");
            if (!labelInput.value.trim()) {
              e.preventDefault();
              valid = false;
              labelInput.classList.remove("border-gray-300");
              labelInput.classList.add("border-red-500");
              labelError.textContent = "Question label is required";
              labelError.classList.remove("hidden");
            } else {
              labelInput.classList.remove("border-red-500");
              labelInput.classList.add("border-gray-300");
              labelError.classList.add("hidden");
            }
            
            // Validate key
            const keyInput = form.querySelector("input[name='key']");
            const keyError = document.getElementById("key-error");
            if (!keyInput.value.trim()) {
              e.preventDefault();
              valid = false;
              keyInput.classList.remove("border-gray-300");
              keyInput.classList.add("border-red-500");
              keyError.textContent = "Question key is required";
              keyError.classList.remove("hidden");
            } else {
              keyInput.classList.remove("border-red-500");
              keyInput.classList.add("border-gray-300");
              keyError.classList.add("hidden");
            }
            
            // Validate options for select/radio/checkbox
            const typeSelect = form.querySelector("select[name='question_type']");
            const optionsInput = form.querySelector("input[name='options']");
            const optionsError = document.getElementById("options-error");
            
            if (["select", "radio", "checkbox"].includes(typeSelect.value) && !optionsInput.value.trim()) {
              e.preventDefault();
              valid = false;
              optionsInput.classList.remove("border-gray-300");
              optionsInput.classList.add("border-red-500");
              optionsError.textContent = "Options are required for " + typeSelect.value + " type";
              optionsError.classList.remove("hidden");
            } else {
              optionsInput.classList.remove("border-red-500");
              optionsInput.classList.add("border-gray-300");
              optionsError.classList.add("hidden");
            }
            
            return valid;
          });
          
          // Update options validation when type changes
          const typeSelect = form.querySelector("select[name='question_type']");
          const optionsGroup = form.querySelector("input[name='options']").closest(".mb-4");
          
          typeSelect.addEventListener("change", function() {
            if (["select", "radio", "checkbox"].includes(this.value)) {
              optionsGroup.classList.remove("opacity-50");
              optionsGroup.querySelector("input").setAttribute("required", "required");
            } else {
              optionsGroup.classList.add("opacity-50");
              optionsGroup.querySelector("input").removeAttribute("required");
            }
          });
          
          // Initial setup
          if (typeSelect) {
            if (!["select", "radio", "checkbox"].includes(typeSelect.value)) {
              optionsGroup.classList.add("opacity-50");
            }
          }
        }
      });
    </script>
    <%= form_with url: preference_path(@category.name), method: :patch do |form| %>
      <div class="grid grid-cols-1 gap-x-8 gap-y-8 md:grid-cols-3">
        <div class="px-4 sm:px-0">
          <h2 class="text-base/7 font-semibold text-gray-900">Edit Preferences</h2>
          <p class="mt-1 text-sm text-gray-600">These preferences will be accessible to all MCP clients that connect to your Context Hub.</p>
        </div>

        <div class="bg-white shadow-sm ring-1 ring-gray-900/5 sm:rounded-xl md:col-span-2">
          <div class="px-4 py-6 sm:p-8">
            <h2 class="text-base/7 font-semibold text-gray-900 mb-6">Update Preferences</h2>

            <div class="divide-y divide-gray-200 space-y-1">
              <% @category.preference_questions.ordered.each do |question| %>
                <% stored_value = @preferences[question.key] %>
                <% current_value = stored_value.present? ? stored_value : question.default_value %>

                <div class="py-5 sm:grid sm:grid-cols-3 sm:gap-4">
                  <dt class="text-sm font-medium text-gray-900">
                      <div class="flex justify-between items-start">
                        <div>
                          <%= question.label %>
                          <% if question.description.present? %>
                            <p class="mt-1 text-xs text-gray-500"><%= question.description %></p>
                          <% end %>
                          <div class="mt-1 flex items-center">
                            <span class="inline-flex items-center rounded-md bg-gray-50 px-2 py-1 text-xs font-medium text-gray-600 ring-1 ring-inset ring-gray-500/10">
                              <%= question.key %>
                            </span>
                            <% if question.required %>
                              <span class="ml-2 inline-flex items-center rounded-md bg-red-50 px-2 py-1 text-xs font-medium text-red-700 ring-1 ring-inset ring-red-600/20">Required</span>
                            <% end %>
                          </div>
                        </div>
                        <div class="flex gap-2">
                          <%= link_to edit_question_preference_path(@category.name, question), class: "inline-flex items-center rounded-md px-2 py-1 text-xs font-semibold text-gray-700 bg-gray-100 hover:bg-gray-200" do %>
                            <svg class="size-3 mr-1" viewBox="0 0 20 20" fill="currentColor">
                              <path d="M13.586 3.586a2 2 0 112.828 2.828l-.793.793-2.828-2.828.793-.793zM11.379 5.793L3 14.172V17h2.828l8.38-8.379-2.83-2.828z" />
                            </svg>
                            Edit
                          <% end %>
                          <%= button_to delete_question_preference_path(@category.name, question), method: :delete, 
                              data: { turbo_confirm: "Are you sure you want to delete this question?" }, 
                              class: "inline-flex items-center rounded-md px-2 py-1 text-xs font-semibold text-red-700 bg-red-50 hover:bg-red-100" do %>
                            <svg class="size-3 mr-1" viewBox="0 0 20 20" fill="currentColor">
                              <path fill-rule="evenodd" d="M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z" clip-rule="evenodd" />
                            </svg>
                            Delete
                          <% end %>
                        </div>
                      </div>
                    </dt>
                  <dd class="mt-2 text-sm text-gray-900 sm:col-span-2 sm:mt-0">
                    <% case question.question_type %>
                    <% when 'text' %>
                      <%= form.text_field "preferences[#{question.key}]", value: current_value,
                        class: "block w-full rounded-md bg-white px-3 py-2 text-gray-900 border border-gray-300 focus:border-indigo-500 focus:ring-2 focus:ring-indigo-500 focus:ring-opacity-20 sm:text-sm" %>

                    <% when 'textarea' %>
                      <%= form.text_area "preferences[#{question.key}]", value: current_value, rows: 4,
                        class: "block w-full rounded-md bg-white px-3 py-2 text-gray-900 border border-gray-300 focus:border-indigo-500 focus:ring-2 focus:ring-indigo-500 focus:ring-opacity-20 sm:text-sm" %>

                    <% when 'number' %>
                      <%= form.number_field "preferences[#{question.key}]", value: current_value,
                        class: "block w-full rounded-md bg-white px-3 py-2 text-gray-900 border border-gray-300 focus:border-indigo-500 focus:ring-2 focus:ring-indigo-500 focus:ring-opacity-20 sm:text-sm" %>

                    <% when 'boolean' %>
                      <div class="flex items-center gap-x-3">
                        <div class="flex items-center h-6">
                          <div class="relative inline-flex items-center">
                            <%= form.check_box "preferences[#{question.key}]",
                              { checked: current_value.to_s == 'true',
                                class: "h-5 w-5 rounded border-gray-300 text-indigo-600 focus:ring-indigo-500" },
                              "1", "0" %>
                          </div>
                        </div>
                        <div class="text-sm">
                          <span class="font-medium text-gray-900">Yes</span>
                        </div>
                      </div>

                    <% when 'select' %>
                      <div class="relative mt-1">
                        <%= form.select "preferences[#{question.key}]",
                          options_for_select(question.options_array, current_value),
                          {},
                          { class: "block w-full rounded-md border-gray-300 py-2 pl-3 pr-10 text-gray-900 focus:border-indigo-500 focus:outline-none focus:ring-indigo-500 sm:text-sm" } %>
                        <div class="pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-500">
                          <svg class="size-4" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                            <path fill-rule="evenodd" d="M5.23 7.21a.75.75 0 011.06.02L10 11.168l3.71-3.938a.75.75 0 111.08 1.04l-4.25 4.5a.75.75 0 01-1.08 0l-4.25-4.5a.75.75 0 01.02-1.06z" clip-rule="evenodd" />
                          </svg>
                        </div>
                      </div>

                    <% when 'radio' %>
                      <div class="mt-2 space-y-3">
                        <% question.options_array.each do |option| %>
                          <div class="flex items-center">
                            <%= form.radio_button "preferences[#{question.key}]", option,
                              checked: current_value == option,
                              class: "h-4 w-4 border-gray-300 text-indigo-600 focus:ring-indigo-500" %>
                            <label for="preferences_<%= question.key %>_<%= option.parameterize %>" class="ml-3 block text-sm font-medium text-gray-700"><%= option %></label>
                          </div>
                        <% end %>
                      </div>

                    <% when 'checkbox' %>
                      <% checkbox_values = current_value.is_a?(String) ? JSON.parse(current_value) : current_value %>
                      <fieldset>
                        <legend class="sr-only"><%= question.label %> options</legend>
                        <div class="mt-2 space-y-3">
                          <% question.options_array.each do |option| %>
                            <div class="relative flex items-start">
                              <div class="flex h-6 items-center">
                                <%= check_box_tag "preferences[#{question.key}][]", option,
                                  checkbox_values&.include?(option),
                                  class: "h-4 w-4 rounded border-gray-300 text-indigo-600 focus:ring-indigo-500",
                                  id: "preferences_#{question.key}_#{option.parameterize}" %>
                              </div>
                              <div class="ml-3 text-sm">
                                <label for="preferences_<%= question.key %>_<%= option.parameterize %>" class="font-medium text-gray-700"><%= option %></label>
                              </div>
                            </div>
                          <% end %>
                        </div>
                      </fieldset>

                    <% when 'file_path' %>
                      <div class="flex items-center rounded-md border border-gray-300 bg-white overflow-hidden focus-within:border-indigo-500 focus-within:ring-1 focus-within:ring-indigo-500">
                        <div class="shrink-0 px-3 py-2 text-sm text-gray-500 bg-gray-50 border-r border-gray-300 select-none">~/</div>
                        <%= form.text_field "preferences[#{question.key}]",
                          value: current_value.to_s.sub(/^~\//, ''),
                          class: "block min-w-0 grow py-2 pl-2 pr-3 text-sm text-gray-900 placeholder:text-gray-400 border-0 focus:ring-0" %>
                      </div>
                    <% end %>
                  </dd>
                </div>
              <% end %>
            </div>
          </div>
          <div class="flex items-center justify-end gap-x-6 border-t border-gray-200 px-4 py-4 sm:px-8">
            <%= link_to "Cancel", preference_path(@category.name), class: "text-sm font-semibold text-gray-900 hover:text-gray-700" %>
            <%= form.submit "Save Preferences", class: "rounded-md bg-indigo-600 px-4 py-2.5 text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-500" %>
          </div>
        </div>
      </div>
    <% end %>
  </div>

  <div class="mt-10 bg-yellow-50 rounded-lg shadow-sm ring-1 ring-yellow-900/5">
    <div class="flex p-6">
      <div class="flex-shrink-0">
        <div class="rounded-md bg-yellow-100 p-2">
          <svg class="size-6 text-yellow-600" viewBox="0 0 24 24" fill="currentColor">
            <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z"/>
          </svg>
        </div>
      </div>
      <div class="ml-4">
        <h2 class="text-lg font-semibold text-gray-900">Usage Instructions</h2>
        <p class="mt-2 text-sm text-gray-700">
          These preferences will be accessible to all MCP clients that connect to Context Hub.
          Make sure to set values that accurately reflect your preferred coding style and environment.
        </p>
      </div>
    </div>
  </div>
</div>
